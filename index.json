{
  "index.html": {
    "href": "index.html",
    "title": "家屋倒壊判定モジュール",
    "keywords": "家屋倒壊判定モジュール 本リポジトリでは、Project PLATEAUの令和4年度のユースケース開発業務の一部である UC23-02「精緻な土砂災害シミュレーション」に関する成果物である「家屋倒壊判定モジュール」のソースコードを公開しています。 「精緻な土砂災害シミュレーション」により、PLATEAUの3D都市モデルから得られる建物の形状や配置、さらに、 構造種別等の属性情報を考慮した精度の高い土石流シミュレーションが実施可能となります。 目次 このページには、以下の内容を記載しています。 家屋倒壊判定モジュールを用いた土石流シミュレーションの実行方法 家屋倒壊判定モジュールのカスタマイズ方法 土石流シミュレーションには、iRIC Morpho2DH（以下、「Morpho2DH」と呼びます）というプログラムを用います。 一方、家屋倒壊判定モジュールを用いた土石流シミュレーションを実行するには、 オリジナルのMorpho2DHをカスタマイズする必要があります。 そのため、最初にオリジナルのMorpho2DHの環境構築と使い方を説明し、その後に、 今回の家屋倒壊判定モジュールを用いた土石流シミュレーションの実行方法を説明します。 1. オリジナルiRIC Morpho2DHの使い方 2. 家屋倒壊判定モジュールを用いた土石流シミュレーションの実行方法 3. 家屋倒壊判定モジュールのカスタマイズ方法"
  },
  "manual/bldgCollapseSimuHowTo.html": {
    "href": "manual/bldgCollapseSimuHowTo.html",
    "title": "2. 家屋倒壊判定モジュールを用いた土石流シミュレーションの実行方法",
    "keywords": "2. 家屋倒壊判定モジュールを用いた土石流シミュレーションの実行方法 本章では、家屋倒壊判定モジュールを用いた土石流シミュレーションの実行方法を説明します。 家屋倒壊判定モジュール組み込み版のソルバexeへの切り替え 最初に、iRICのGUIで呼び出されるMorpho2DHのソルバを家屋倒壊判定モジュール組み込み版に切り替える必要があります。 まずフォルダC:\\Users\\[ユーザ名]\\iRIC_v4\\private\\solvers\\iRICsolvers_Morpho2DHを作成します。[ユーザ名]は、PCによって異なります。 morpho2DH_PK12.zipを 解凍して得られるdefinition.xmlとmorpho2d.exeとtranslation_ja_JP.tsを1.のフォルダのコピーします。 下図のように、iRICを起動して家屋倒壊判定モジュール組み込み版ソルバMorpho2DH PK12を選択して新規プロジェクトを作成し、ウィンドウタイトルにMorpho2DH PK12と表示されていれば、正しくソルバが切り替えられたことになります。 Warning C:\\Users\\[ユーザ名]\\iRIC_v4\\solvers\\iRICsolvers_Morpho2DHというフォルダ(privateがフォルダパスにないもの)がありますが、 これはオリジナルのソルバですので、間違えて上書きしないようにしてください。 建物耐力の設定 前述の方法で家屋倒壊判定モジュール組み込み版ソルバMorpho2DH PK12を選択して新規プロジェクトを作成し、以下のように建物耐力を設定します。 建物耐力設定以外の操作は、1. オリジナルiRIC Morpho2DHの使い方をご参照ください。 ①メニュー「計算条件」⇒「設定」を選択肢、「計算条件」ウィンドウを開く ②左のリストから「建物」を選択 ③「建物破壊」を「使用する」とし、「編集」ボタンを押して「建物倒壊応力」ウィンドウを開く。 ④左側テーブルのコード1の行の「限界破壊応力」に、建物耐力の数値(kN/m)です。GUIの表記は誤記ですので注意してください。今回は500kN/mと入力してください。 このパラメータは木造建物の基本的な耐力を設定する数値ですが、500～800kN/m程度にすると、既往の実被害の再現度が高くなることが分かっています。 この数値の妥当性・物理的意味については今後検証していく必要があります。 コード7の行の「限界破壊応力」の数値は4000kN/mのままで構いません。RC造建物等の倒壊する可能性が低い建物の想定ですので、大きな数値を設定しておけばよいです。 シミュレーションの実行 建物耐力の設定以外は、 シミュレーションの実行方法・結果の確認方法含めてオリジナル版と同じですので、 1. オリジナルiRIC Morpho2DHの使い方をご参照ください。 計算が完了し、建屋の破壊状況を可視化すると以下のような結果となります。（緑色が倒壊・赤色が非倒壊）"
  },
  "manual/customizeModule.html": {
    "href": "manual/customizeModule.html",
    "title": "3. 家屋倒壊判定モジュールのカスタマイズ方法",
    "keywords": "3. 家屋倒壊判定モジュールのカスタマイズ方法 ビルドに必要な環境 コンパイラ 作業の前に事前にインストールしてください。 名称 バージョン 内容 Intel oneAPI Intel(R) 64, Version 2021.10.0 Build 20230609_000000 Fortranコンパイラ Microsoft Visual Studio 2019 16.11.8 C,C++コンパイラ OS Windows 10 or 11 家屋倒壊判定モジュールのカスタマイズ・ビルド方法 1. morpho2DHSolver.zipを自分のPCにコピーし解凍する。 ファイル構成は以下のようになっています。 morpho2DHSolver - iRICsolvers_Morpho2DH : ビルド済みのMorpho2DHのソルバー(morpho2d.exe)が保存されるフォルダ - definition.xml : exeのバージョン等が記載されているxml - morpho2d.exe : ビルド済みのMorpho2DHのソルバーのexe - translation_ja_JP.ts : 翻訳ファイル - src : Morpho2DHのソルバーのソース・オブジェクトファイルを収めているフォルダ - build.bat : ビルドを実行するバッチファイル - func_cforce.f90 : 家屋倒壊閾値を変動させるサブルーチン - func_fbuilding.f90 : 土石流外力を計算するサブルーチン - *.obj : 建屋倒壊判定以外のソルバーのビルド済みファイル - *.mod : 建屋倒壊判定以外のソルバーのビルド済みファイル - *.lib : 建屋倒壊判定以外のソルバーのビルド済みファイル 2. 家屋倒壊判定モジュールのサブルーチンをカスタマイズする。 家屋倒壊判定モジュールは以下の二つのサブルーチンで構成されており、この中の処理を更新することで、カスタマイズが出来ます。 func_cforce.f90: 家屋倒壊閾値を変動させるサブルーチン func_fbuilding.f90: 土石流外力を計算するサブルーチン 家屋倒壊閾値を変動させるサブルーチンの説明 以下に示すfunc_cforce.f90内のfunction cforce()の中身を書き換えてください。 それ以外の部分は変更しないでください。 module func_cforce USE allo1 USE allo2 USE allo3 USE allo4 USE allo5 USE GRIDCOORD USE GridCond USE CalcCond USE Take1Var implicit none contains ! 建屋倒壊とみなす単位長さあたりの力の閾値を計算する ! 全建物(構造種別・階数などによらず)に対して実行される ! ! 構造種別の違いはBCritAの絶対値で判定する必要がある。 ! RC等の非木造のBCritAは木造に比べるとかなり大きいという仮定の元に判定する。 ! ! [IN] ! BCritA : 基本となる建屋倒壊判定閾値(N/m) ! IByearA: 建築年(西暦) ! 建築年が不明な場合は1000が与えられる。 ! BHeightA: 建物高さ(m) ! IBStoryA: 建物階数コード(「20231110_建物属性の設定方法.pdf」記載の建物階数コード) ! 501: 地下階なし_地上1階 ! 502: 地下階なし_地上2階 ! 503: 地下階なし_地上3階 ! 504: 地下階なし_地上4-5階 ! 505: 地下階なし_地上6-7階 ! 506: 地下階なし_地上8-10階 ! 507: 地下階なし_地上11-15階 ! 508: 地下階なし_地上16階以上 ! 511: 地下階あり_地上1階 ! 512: 地下階あり_地上2階 ! 513: 地下階あり_地上3階 ! 514: 地下階あり_地上4-5階 ! 515: 地下階あり_地上6-7階 ! 516: 地下階あり_地上8-10階 ! 517: 地下階あり_地上11-15階 ! 518: 地下階あり_地上16階以上 ! 521: 不明 ! [OUT] ! ByearAA: 基本となる建屋倒壊判定閾値BCritAにかける倍率 ! 年代・階数等によって変動。 ! cforce: 建屋倒壊とみなす単位長さあたりの力の閾値(N/m) real*8 function cforce(BCritA, IByearA, ByearAA, BHeightA, IBStoryA) integer, intent(in) :: IByearA,IBStoryA real*8, intent(in) :: BCritA, BHeightA real*8, intent(out) :: ByearAA ! 初期値の設定 ! BCritAの変動は無にする ByearAA=1.0 cforce = BCritA ! 木造以外の場合 ! 全構造種別に対して実行される ! 構造種別の違いはBCritAの絶対値で判定できる。 ! RC等のBCritAは木造に比べるとかなり大きい数値 if (BCritA > 2000e+3) then ! 木造以外はこれでおしまい return end if ! 木造の場合 ! 年代毎に倒壊判定閾値を変動させる if (IByearA >= 2000) then ByearAA=1.10 else if (IByearA >= 1982) then ByearAA=1.00 ! 基準 else if (IByearA >= 1959) then ByearAA=1.00 else ! 1958年以前と、年代不明=1000の場合 ! 年代不明の場合は古すぎて情報が残っていない可能性があるので、 ! 安全側の評価結果になるように閾値(耐力)を低めに設定する。 ! 耐力をゼロにしてしまうと、建物が完全に無いことになって、実態とかけ離れすぎるリスクが高いので、ゼロにはしない。 ByearAA=0.80 end if cforce = BCritA*ByearAA end function end module func_cforce.f90に実装している判定ロジックは以下の通りです。 土石流外力を計算するサブルーチンの説明 以下に示すfunc_fbuilding.f90内のfunction fbuilding()の中身を書き換えてください。 それ以外の部分は変更しないでください。 module func_fbuilding USE allo1 USE allo2 USE allo3 USE allo4 USE allo5 USE GRIDCOORD USE GridCond USE CalcCond USE Take1Var implicit none contains ! 土石流外力を計算するサブルーチン ! 流動の向きや傾斜はこの関数の外で処理済み ! 全構造種別の建物に対して実行される。 ! ! [IN] ! Rmbu: 密度(kg/m^3) ! G: 重力加速度(m/s^2) ! ZZbbu: 土石流深さ(静的応力計算時に使われる値)(m) ! Hbu: 土石流深さ(流動による応力計算時に使われる値)(m) ! Ubu: 流動速(m/s) ! [OUT] ! fbuilding: 単位幅あたり外力(N/m) real*8 function fbuilding(Rmbu,G,ZZbbu,Hbu,Ubu) real*8 :: Rmbu,G,ZZbbu,Hbu,Ubu fbuilding = Rmbu*G*ZZbbu**2./2.+Rmbu*Hbu*Ubu**2. end function end module 3. ビルドする スタートメニューからIntel oneAPI command prompt for Intel 64 for Visual Studio 2019を起動し、 以下のようなコマンドを入力してください。 > cd /d [morpho2DHSolver.zipを解凍したフォルダ]\\src > build.bat build.batの中身は以下のようになっています。1行目のIntel oneAPIのインストールディレクトリは自分の環境に合わせて変更してください。 ビルド済みのソルバーのexeは、5行目に記載した場所に出力されます。 ビルド実行後にmorpho2d.exeの更新日時が新しくなっていることを確認してください。 call \"C:\\Program Files (x86)\\Intel\\oneAPI\\setvars.bat\" intel64 vs2022 ifort /MD -c func_fbuilding.f90 ifort /MD -c func_cforce.f90 ifort /MD -o ..\\iRICsolvers_Morpho2DH\\morpho2d.exe *.obj iriclib.lib Intel oneAPI command prompt for Intel 64 for Visual Studio 2019の起動からビルド実行までの出力は以下のようになります。 出力 :: initializing oneAPI environment... Initializing Visual Studio command-line environment... Visual Studio version 16.11.8 environment configured. \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\" Visual Studio command-line environment initialized for: 'x64' : advisor -- latest : compiler -- latest : dal -- latest : debugger -- latest : dev-utilities -- latest : dnnl -- latest : dpcpp-ct -- latest : dpl -- latest : inspector -- latest : ipp -- latest : ippcp -- latest : itac -- latest : mkl -- latest : mpi -- latest : tbb -- latest : vtune -- latest :: oneAPI environment initialized :: C:\\Program Files (x86)\\Intel\\oneAPI>cd /d D:\\projects\\FTA3152_PlateauDebrisFlow\\24_doc\\Building-collapse-detector\\assets\\morpho2DHSolver\\src D:\\projects\\FTA3152_PlateauDebrisFlow\\24_doc\\Building-collapse-detector\\assets\\morpho2DHSolver\\src>build.bat D:\\projects\\FTA3152_PlateauDebrisFlow\\24_doc\\Building-collapse-detector\\assets\\morpho2DHSolver\\src>call \"C:\\Program Files (x86)\\Intel\\oneAPI\\setvars.bat\" intel64 vs2022 :: WARNING: setvars.bat has already been run. Skipping re-execution. To force a re-execution of setvars.bat, use the '--force' option. Using '--force' can result in excessive use of your environment variables. Intel(R) Fortran Intel(R) 64 Compiler Classic for applications running on Intel(R) 64, Version 2021.10.0 Build 20230609_000000 Copyright (C) 1985-2023 Intel Corporation. All rights reserved. Intel(R) Fortran Intel(R) 64 Compiler Classic for applications running on Intel(R) 64, Version 2021.10.0 Build 20230609_000000 Copyright (C) 1985-2023 Intel Corporation. All rights reserved. Intel(R) Fortran Intel(R) 64 Compiler Classic for applications running on Intel(R) 64, Version 2021.10.0 Build 20230609_000000 Copyright (C) 1985-2023 Intel Corporation. All rights reserved. Microsoft (R) Incremental Linker Version 14.29.30138.0 Copyright (C) Microsoft Corporation. All rights reserved. -out:..\\iRICsolvers_Morpho2DH\\morpho2d.exe -subsystem:console allo1Mod.obj allo2Mod.obj allo3Mod.obj allo4Mod.obj allo5Mod.obj CalcCondMod.obj func_cforce.obj func_fbuilding.obj GridCondMod.obj GridCoordMod.obj iric.obj ReadCGNS.obj Take3P.obj TakeVar1.obj Take_1aN.obj WriteCGNS.obj iriclib.lib 4. ソルバー名を書き換える カスタマイズ版のソルバーであることが識別できるように iRICsolvers_Morpho2DH\\definition.xmlの<SolverDefinition>タグのcaption属性を書き換えます。 任意の半角英数字で構いませんが、caption=\"Morpho2DH PK12\"をcaption=\"Morpho2DH C1といった形で変更します。 <?xml version=\"1.0\" encoding=\"utf-8\"?> <SolverDefinition xmlns=\"www.iric.net/SolverDefinition/1.0\" name=\"morpho2d\" caption=\"Morpho2DH PK12\" version=\"2.0.23062302\" ・ ・ ・ 5. カスタマイズ版のソルバーに切り替える カスタマイズ版のソルバーを指定して計算を実行方法については、 家屋倒壊判定モジュール組み込み版のソルバexeへの切り替えをご覧ください。"
  },
  "manual/originalSimuHowTo.html": {
    "href": "manual/originalSimuHowTo.html",
    "title": "1. オリジナルiRIC Morpho2DHの使い方",
    "keywords": "1. オリジナルiRIC Morpho2DHの使い方 ここでは、iRIC Morpho2DHのソルバーの稼働環境を準備する手順をお示します。 iRIC Morpho2DHの概要 iRIC Morpho2DHは、は平面二次元の土石流・泥流モデルを主体とした解析ソルバーであり、斜面崩壊を初期条件とした土石流・泥流の流動・堆積過程を表現可能なモデルです。砂防ダム，堰，家屋などの構造物や地盤の浸食深さの平面分布などを考慮した解析が可能です。 詳細はiRIC公式サイトを参照してください。 iRIC Morpho2DHのインストール iRIC Morpho2DHのインストールおよびセットアップ手順は以下のとおりです。 1 iRIC公式サイトにアクセスし、iRICの会員登録を行ったうえで、iRIC-v4をインストールしてください。※既にv4以外のバージョンのiRICお持ちの方は、改めてv4をインストールしてください。 2 家屋倒壊判定モジュールを、PCの以下のフォルダー内に貼り付けます。 3 iRIC(v4)を立ち上げ、「iRIC スタートページ」から「新しいプロジェクト」を選択し、「ソルバーの選択」で「Morpho2DH PK12」を選択 土石流シミュレーションの実行方法 家屋の倒壊状況等を加味した土石流シミュレーションのフローを以下に示します。 既存のiRIC Morpho2DHの基本的な操作は、マニュアルおよびチュートリアルも併せて参照してください。 入力データの準備 iRICの計算に必要なデータのうち、DEMデータ（地形データ）および建物データは、CityGMLデータをFMEにより変換して使用します。具体的には、地形LOD1データをxyz（点群）データに、建築物LOD1データをシェープファイルに変換します。 FMEを用いた変換方法はこちらを参照してください。また、FMEによる地形LOD1データの変換のサンプルはこちらを、建築物LOD1データの変換のサンプルはこちらを参照してください。 データの読み込み・入力 ここでは、1. DEMデータ（地形データ）の読み込み、2.建物データの読み込み、3.格子生成、4.浸食深さの設定、5.斜面崩壊の設定、6.固定床高さの設定（必要な場合のみ）、7.属性のマッピング、8.参照情報（土砂災害警戒区域）の読み込みを行います。 1および3～7については、既存のiRIC Morpho2DHの機能と同様なので、チュートリアルも参考としてください。 1.DEMデータ（地形データ）の読み込み 「オブジェクトブラウザー」の中の「河床位」を右クリックし、「インポート」を選択した後に「点群データ」を選択します。次に、読み込みたいDEMデータ（xyz形式）を選択します。「インポート設定」では、先頭行が座標値でなく「x,y,z」となっている場合、「レコードオプション」の「読み飛ばすヘッダ行数」を1にします。 2.建物データの読み込み 既存のiRIC Morpho2DHにない機能です。「建物建設年」「建物構造」「建物高さ(m)」の3つをそれぞれ読み込む必要があります。以下、「建物建設年」を例に読み込み方法を説明します。 「オブジェクトブラウザー」の中の「建物建設年」を右クリックし、「インポート」を選択した後に「ポリゴンデータ」を選択します。次に、読み込みたい建物データ（シェープファイル）を選択します。「ポリゴングループ インポート設定」では、値は「シェープファイルの属性から読み込む」を選択し、「建物建設年」を選択します。 ※「建物構造」「建物高さ(m)」についても、同じ要領で読み込みます。 3.格子生成 2m×2mの格子（メッシュ）を作成します。基本的には、チュートリアルのp5～p7を参照してください。格子生成ダイアログ（チュートリアルのp6）における「格子数・格子の大きさの決定」では、各格子の大きさ（dI, dJ）が2mとなるよう、nI,nJの値を調整してください。 なお、格子の中心線（チュートリアルのp6）の向きは、土石流の流れの向きと概ね一致させるようにしてください。 ※地形図は、「オブジェクトブラウザー」の中の「背景画像（インターネット）」の中の「国土地理院（標準地図）」をチェックすると表示されます。 4.浸食深さの設定 地盤の浸食深さ(m)の設定方法は、チュートリアルのp10を参照してください。 浸食深さ(m)は、土石流に関する基礎調査調書のデータを用いて、浸食深を渓流長で加重平均したものを使用することを基本とします。設定方法は、浸食深さの設定方法を参照してください。 5.斜面崩壊の設定 斜面崩壊の場所と大きさの設定方法は、チュートリアルのp12～p13を参照してください。斜面崩壊箇所は、渓流の最上流端（尾根付近）とすることで、土石流による被害がより大きい想定になります。斜面崩壊の深さは、0.3mを基本とします。 ※地形図は、「オブジェクトブラウザー」の中の「背景画像（インターネット）」の中の「国土地理院（標準地図）」をチェックすると表示されます。 なお、渓流が複数ある場合は、渓流長が最も長い渓流の最上流端を斜面崩壊箇所とすると、土石流による被害がより大きい想定になります。土石流に関する基礎調査調書がある場合は、主渓流（想定土石流流出区間）の最上流端としてください。 6.固定床高さの設定（必要な場合のみ） 既設砂防堰堤などの浸食されない河川・砂防構造物が存在する場合、チュートリアルのp29～p32の方法で固定床高さを設定してください。この場合、「計算条件の設定」→「計算条件（土石流・泥流）」において、「固定床高さ」は「使用する」を選択してください。 地表面基準の固定床高さは、土石流に関する基礎調査調書などをもとに、既設砂防堰堤の地表面からの高さを入力してください。 7.属性のマッピング 1～6で読み込み・入力したデータを2m×2mの格子（メッシュ）に落とし込むため、「格子」タブの「属性のマッピング」→「実行」をクリックし、属性のマッピングを行います。 ※属性のマッピングを行った後、1～6の読み込み・入力データを変更した場合、変更した項目について再度属性のマッピングを実施してください。 8.参照情報（土砂災害警戒区域）の読み込み 計算に必要なデータではありませんが、参照情報として土砂災害警戒区域を読み込むことで、計算結果の確認方法において計算結果と土砂災害警戒区域を重ね合わせて表示することができます。 「オブジェクトブラウザー」の中の「参照情報」を右クリックし、「インポート」を選択した後に「ポリゴンデータ」を選択します。次に、読み込みたい土砂災害警戒区域（シェープファイル）を選択します。 ※土砂災害警戒区域（シェープファイル）は、国土数値情報「土砂災害警戒区域データ」をダウンロードしてください。 計算条件の設定 「計算条件」タブの「設定」をクリックし、計算条件を設定します。 ここでは、1.計算の種類・タイムステップ・データ出力時間、2.土石流の諸元、3.河床材料の粒径、4.建物破壊の有無・建物破壊応力等を設定します。全ての計算条件の設定が終了したら、「OK」をクリックします。 1～3については、既存のiRIC Morpho2DHの機能と同様なので、チュートリアル参考としてください。 1.計算の種類・タイムステップ・データ出力時間の設定 基本的にはチュートリアルのp17を参照してください。特記事項は以下のとおりです。 計算の種類：今回は「土石流・泥流」を選択してください。 終了時間(s)：計算範囲の大きさにより、必要な時間、即ち土石流が流下する時間が異なります。まずは100秒～200秒程度で設定し、不足すれば適宜時間を延長して再計算してください。 タイムステップ(s)：格子の大きさが2m×2mの場合、0.001秒を推奨します。 2.土石流の諸元の設定 土砂濃度、土砂の密度等を設定します。基本的にはデフォルトの値で問題ありません。詳細はチュートリアルのp18を参照してください。 なお、砂防ダムなどの浸食されない河川・砂防構造物が存在する場合、「固定床高さ」では「使用する」を選択し、チュートリアルのp29～p32の方法で固定床高さを設定してください。 3.河床材料の粒径の設定 河床材料の種類は、基本的には「一様砂」で問題ありません。平均粒径は、渓流の地質や河床勾配等により変動するので、現地調査を行って設定します。現地調査による平均粒径の設定方法は、こちらを参照してください。 現地調査を行わない場合、平均粒径は0.01(m)を基本とします。 4.建物破壊の有無・建物破壊応力の設定 既存のiRIC Morpho2DHにない機能です。建物破壊を考慮した計算を行う場合、建物破壊は「使用する」を選択し、建物破壊応力を編集します。行を2行追加し、コードと限界破壊応力を入力します。建物破壊応力は、木造相当（コード1）は500N/m2、鉄筋コンクリート造相当（コード7）は4,000 N/m2とします。 計算（シミュレーション）の実行 「計算」タブの「実行」をクリックし、計算を実行します。実行ボタンを押すと、プロジェクト保存の「情報」が表示されるので、「はい」をクリックします。 なお、処理時間は、計算範囲の大きさや計算時間の長さにより変動しますが、数時間要する場合があります。 計算実行中は、灰色画面のソルバーコンソールが起動します。計算中に途中までの計算結果を確認したいときは、「計算結果の再読み込み」をクリックした後に、計算結果の描画作業を行います。 計算結果の確認方法 iRIC上での確認 計算終了後、「2D可視化ウインドウ」を開くと、iRIC上で計算結果を2次元的に確認することができます。詳細はチュートリアルのp25～p27を参照してください。 確認可能な計算結果は、土石流の流動深（Depth）、流体力（FBuilding）、建物の倒壊判定（Building）等です。「アニメーションツールバー」を操作すると、計算結果を動画で確認できます。流動深（Depth）、流体力（FBuilding）の最大値を包絡したものを表示したい場合は、それぞれ「Depthmax」「FBuildingMax」を選択してください。 また、計算結果と土砂災害警戒区域を重ね合わせて表示する場合は、「オブジェクトブラウザー」の「地理情報」の「参照情報」をチェックしてください。（参照情報の入力についてはこちらを参照してください。）この際、「地理情報」の「参照情報」以外の項目はチェックを外すことで、表示が煩雑になるのを防ぎます。 なお、建物の倒壊判定（Building）の値は、倒壊が0.5、非倒壊が1.0となっており、倒壊が赤、非倒壊を黄色とすると下図のように表示できます。 専用ビューアでの結果確認 iRIC上では2次元的に計算結果を確認できますが、3次元的に計算結果を確認する場合は、3次元可視化ビューワを使用します。作業手順は以下のとおりです。 1.計算結果をCSV出力 「計算結果」タブの「エクスポート」をクリックし、形式はCSVファイルを選択し、出力フォルダを指定します。出力したい時刻・領域を指定することもできます。 2.出力したCSVを可視化コンバータによりCZMLに変換 詳細は可視化コンバータの説明を参照してください。 3.変換したCZMLを3次元可視化ビューワに読み込み 詳細は3次元可視化ビューワの説明を参照してください。"
  }
}